/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2022-12-14 07:37:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages.mobile;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!DOCTYPE html>\r\n");
      out.write("    <html lang=\"en\">\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"UTF-8\">\r\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("        <title>Document</title>\r\n");
      out.write("    \r\n");
      out.write("    \t<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css\">\r\n");
      out.write("    \t <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"./assets/fonts/fontawesome-free-5.15.3-web/css/all.min.css\">\r\n");
      out.write("        <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("        <link rel=\"stylesheet\" href=\"./css/base.css\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"./css/grid.css\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"./css/main.css\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"./css/responsive.css\">\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("   \r\n");
      out.write("        <div class=\"main\">\r\n");
      out.write("            <!-- header -->\r\n");
      out.write("           ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("            <!-- header -->\r\n");
      out.write("            \r\n");
      out.write("            <!--content-->\r\n");
      out.write("           ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "content.jsp", out, false);
      out.write("\r\n");
      out.write("           \t<!--content-->\r\n");
      out.write("           \t\r\n");
      out.write("            <!-- footer-->\r\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("            <!-- footer-->\r\n");
      out.write("           \r\n");
      out.write("    \r\n");
      out.write("            <!-- Button -->\r\n");
      out.write("            <a href=\"#\" class=\"go-to-top\">\r\n");
      out.write("                <i class=\"go-to-top__icon fas fa-chevron-circle-up\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("    \r\n");
      out.write("            <a href=\"#\" class=\"go-to-chat\">\r\n");
      out.write("                <i class=\"go-to-chat__icon fab fa-facebook-messenger\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("        </div>\r\n");
      out.write("    \r\n");
      out.write("        <script src=\"./js/phone.js\"></script>\r\n");
      out.write("        <script src=\"./js/tool.js\"></script>\r\n");
      out.write("        <script src=\"./js/fix.js\"></script>\r\n");
      out.write("        <script src=\"./js/unlock.js\"></script>\r\n");
      out.write("        <script>\r\n");
      out.write("            const $ = document.querySelector.bind(document);\r\n");
      out.write("            const $$ = document.querySelectorAll.bind(document);\r\n");
      out.write("    \r\n");
      out.write("            const event = (() => {\r\n");
      out.write("                \r\n");
      out.write("                return {\r\n");
      out.write("                    handleEvent() {\r\n");
      out.write("                        // Search in mobile\r\n");
      out.write("                        const mobileSearchBtn = $('.header-mobile-search');\r\n");
      out.write("    \r\n");
      out.write("                        mobileSearchBtn.onclick = () => {\r\n");
      out.write("                            $('.header-mobile-search-box__wrap').classList.toggle('active');\r\n");
      out.write("                        };\r\n");
      out.write("    \r\n");
      out.write("                        // Menu nav in mobile \r\n");
      out.write("                        const mobileMenuBtn = $('.header-mobile-menu');\r\n");
      out.write("                        const overlayMobileScreen = $('.header-mobile-nav__overlay');\r\n");
      out.write("                        const mobileNav = $('.header-mobile-nav');\r\n");
      out.write("                        const mobileCloseNavBtn = $('.header-mobile-nav__close');\r\n");
      out.write("    \r\n");
      out.write("                        function handleMobileNav() {\r\n");
      out.write("                            overlayMobileScreen.classList.toggle('active');\r\n");
      out.write("                            mobileNav.classList.toggle('active');\r\n");
      out.write("                        };\r\n");
      out.write("    \r\n");
      out.write("                        mobileMenuBtn.onclick = () => {\r\n");
      out.write("                            handleMobileNav();\r\n");
      out.write("                        };\r\n");
      out.write("    \r\n");
      out.write("                        overlayMobileScreen.onclick = () => {\r\n");
      out.write("                            handleMobileNav();\r\n");
      out.write("                        };\r\n");
      out.write("    \r\n");
      out.write("                        mobileCloseNavBtn.onclick = () => {\r\n");
      out.write("                            handleMobileNav()\r\n");
      out.write("                        };\r\n");
      out.write("    \r\n");
      out.write("                        // Menu subnav in mobile \r\n");
      out.write("                        const mobileSubNavs = $$('.header-mobile-nav__item-select');\r\n");
      out.write("                        \r\n");
      out.write("                        Array.from(mobileSubNavs).forEach((mobileSubNav) => {\r\n");
      out.write("                            mobileSubNav.onclick = () => {\r\n");
      out.write("                                mobileSubNav.classList.toggle('active');\r\n");
      out.write("                                mobileSubNav.firstElementChild.classList.toggle('active');\r\n");
      out.write("                                if (mobileSubNav.nextElementSibling) {\r\n");
      out.write("                                    mobileSubNav.nextElementSibling.classList.toggle('active');\r\n");
      out.write("                                };\r\n");
      out.write("                            };\r\n");
      out.write("                        });\r\n");
      out.write("    \r\n");
      out.write("                        // Scroll Screen \r\n");
      out.write("                        const goToTopBtn = $('.go-to-top');\r\n");
      out.write("                        document.onscroll = () => {\r\n");
      out.write("                            const scrollTop = window.scrollY || document.documentElement.scrollTop;\r\n");
      out.write("                            if (scrollTop > 120) {\r\n");
      out.write("                                goToTopBtn.classList.add('active');\r\n");
      out.write("                            } else {\r\n");
      out.write("                                goToTopBtn.classList.remove('active');\r\n");
      out.write("                            }\r\n");
      out.write("                        };\r\n");
      out.write("                    },\r\n");
      out.write("                    init() {\r\n");
      out.write("                        this.handleEvent();\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("    \r\n");
      out.write("            })();\r\n");
      out.write("    \r\n");
      out.write("            event.init();\r\n");
      out.write("        </script>\r\n");
      out.write("    </body>\r\n");
      out.write("    </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
